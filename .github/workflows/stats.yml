name: Stats
on: [push]
jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - run: |
          # Use API to count
          TOKEN="${{ secrets.LOC_TOKEN }}"
          if [ -z "$TOKEN" ]; then
            echo "Using public API only"
            TOKEN=""
            AUTH=""
          else
            echo "Using authenticated API"
            AUTH="-H \"Authorization: token $TOKEN\""
          fi
          
          # Get all repos with pagination
          all_repos=""
          page=1
          while true; do
            if [ -n "$TOKEN" ]; then
              repos=$(curl -s -H "Authorization: token $TOKEN" "https://api.github.com/user/repos?type=owner&per_page=100&page=$page")
            else
              repos=$(curl -s "https://api.github.com/users/murr2k/repos?type=owner&per_page=100&page=$page")
            fi
            
            if [ "$(echo "$repos" | grep -c '"name"')" -eq 0 ]; then
              break
            fi
            
            all_repos="${all_repos}${repos}"
            page=$((page + 1))
          done
          
          # Count non-forked repos
          repo_count=$(echo "$all_repos" | grep -B2 '"fork": false' | grep -c '"name"')
          
          # Get total bytes from languages API for each repo
          total_bytes=0
          echo "$all_repos" | grep -B2 '"fork": false' | grep '"name"' | cut -d'"' -f4 | while read repo; do
            echo "Checking $repo..."
            if [ -n "$TOKEN" ]; then
              lang_bytes=$(curl -s -H "Authorization: token $TOKEN" "https://api.github.com/repos/murr2k/$repo/languages" | grep -o '[0-9]*' | awk '{sum+=$1} END {print sum}')
            else
              lang_bytes=$(curl -s "https://api.github.com/repos/murr2k/$repo/languages" | grep -o '[0-9]*' | awk '{sum+=$1} END {print sum}')
            fi
            total_bytes=$((total_bytes + lang_bytes))
            echo "  $lang_bytes bytes"
          done > /tmp/repo_sizes.txt
          
          # Sum up total bytes
          total_bytes=$(cat /tmp/repo_sizes.txt | grep "bytes" | grep -o '[0-9]*' | awk '{sum+=$1} END {print sum}')
          
          # Estimate lines: ~35 bytes per line average for code
          total_lines=$((total_bytes / 35))
          
          echo "Repos: $repo_count, Bytes: $total_bytes, Est lines: $total_lines"
          
          # Format
          if [ $total_lines -ge 1000000 ]; then
            formatted="$((total_lines/1000000))M+"
          elif [ $total_lines -ge 1000 ]; then
            formatted="$((total_lines/1000))K+"
          else
            formatted="${total_lines}+"
          fi
          
          # Update file
          echo "{\"lines_of_code\": $total_lines, \"repositories\": $repo_count, \"last_updated\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\", \"formatted\": \"$formatted\"}" > stats-simple.json
          
          # Commit
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add stats-simple.json
          git diff --staged --quiet || (git commit -m "ðŸ“Š Update: $formatted" && git push)