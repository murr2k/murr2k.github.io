name: Update Stats

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC
  push:
    branches: [main]
    paths:
      - '.github/workflows/update-stats.yml'

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install dependencies
        run: |
          # Install tokei
          wget -q https://github.com/XAMPPRocky/tokei/releases/latest/download/tokei-x86_64-unknown-linux-gnu.tar.gz
          tar xf tokei-x86_64-unknown-linux-gnu.tar.gz
          sudo mv tokei /usr/local/bin/
          rm tokei-x86_64-unknown-linux-gnu.tar.gz
          
          # Install jq and bc
          sudo apt-get update && sudo apt-get install -y jq bc
      
      - name: Count lines of code
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p temp_repos
          cd temp_repos
          
          # Get username
          USERNAME=$(gh api /user | jq -r '.login')
          echo "Counting code for user: $USERNAME"
          
          # Get all non-forked repos
          gh api "/users/$USERNAME/repos?type=owner&per_page=100" --paginate | \
            jq -r '.[] | select(.fork == false) | .clone_url' > repos.txt
          
          total_lines=0
          repo_count=0
          
          # Process each repository
          while IFS= read -r repo; do
            [ -z "$repo" ] && continue
            repo_name=$(basename "$repo" .git)
            echo "Processing $repo_name..."
            
            if git clone --depth 1 -q "$repo" "$repo_name" 2>/dev/null; then
              # Count lines with tokei
              lines=$(tokei "$repo_name" -o json 2>/dev/null | jq -r '.Total.code // 0' 2>/dev/null || echo "0")
              total_lines=$((total_lines + lines))
              echo "  Found $lines lines"
              rm -rf "$repo_name"
            fi
            repo_count=$((repo_count + 1))
          done < repos.txt
          
          # Format the number
          if [ $total_lines -ge 1000000000 ]; then
            formatted=$(echo "scale=1; $total_lines/1000000000" | bc)"B+"
          elif [ $total_lines -ge 1000000 ]; then
            formatted=$(echo "scale=0; $total_lines/1000000" | bc)"M+"
          elif [ $total_lines -ge 1000 ]; then
            formatted=$(echo "scale=0; $total_lines/1000" | bc)"K+"
          else
            formatted="${total_lines}+"
          fi
          
          echo "Total: $total_lines lines in $repo_count repositories ($formatted)"
          
          # Create stats file
          cat > ../stats-simple.json << EOF
{
  "lines_of_code": $total_lines,
  "repositories": $repo_count,
  "last_updated": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
  "formatted": "$formatted"
}
EOF
          
          cd ..
          rm -rf temp_repos
      - run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add stats-simple.json
          git diff --staged --quiet || (git commit -m "Update stats" && git push)