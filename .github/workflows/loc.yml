name: LOC
on: push
jobs:
  count:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    steps:
      - uses: actions/checkout@v4
      - name: Count
        env:
          GH_TOKEN: ${{ secrets.LOC_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          # Use hardcoded username since we know this is murr2k's repo
          USERNAME="murr2k"
          echo "Counting for $USERNAME..."
          
          # Clone and count each repo
          total=0
          count=0
          
          # Install jq for JSON parsing
          sudo apt-get update && sudo apt-get install -y jq
          
          # Configure git to use token for private repos
          git config --global url."https://${GH_TOKEN}@github.com/".insteadOf "https://github.com/"
          
          # Get ALL repos (public + private), filter out forks, with pagination
          page=1
          while true; do
            repos=$(curl -s -H "Authorization: token ${GH_TOKEN}" "https://api.github.com/user/repos?type=owner&per_page=100&page=$page")
            
            # Break if no more repos
            if [ "$(echo "$repos" | jq '. | length')" -eq 0 ]; then
              break
            fi
            
            # Process each non-forked repo
            for repo in $(echo "$repos" | jq -r '.[] | select(.fork == false) | .name'); do
              echo "Processing $repo..."
              if git clone -q --depth 1 "https://github.com/$USERNAME/$repo" "/tmp/$repo" 2>/dev/null; then
                # Count ALL text files, excluding common binary/data directories
                lines=$(find "/tmp/$repo" -type f \
                  -not -path "*/\.*" \
                  -not -path "*/node_modules/*" \
                  -not -path "*/vendor/*" \
                  -not -path "*/dist/*" \
                  -not -path "*/build/*" \
                  -not -path "*/target/*" \
                  -not -path "*/__pycache__/*" \
                  -not -path "*/venv/*" \
                  -not -path "*/env/*" \
                  -not -name "*.jpg" \
                  -not -name "*.jpeg" \
                  -not -name "*.png" \
                  -not -name "*.gif" \
                  -not -name "*.svg" \
                  -not -name "*.ico" \
                  -not -name "*.pdf" \
                  -not -name "*.zip" \
                  -not -name "*.tar" \
                  -not -name "*.gz" \
                  -not -name "*.jar" \
                  -not -name "*.war" \
                  -not -name "*.ear" \
                  -not -name "*.class" \
                  -not -name "*.pyc" \
                  -not -name "*.pyo" \
                  -not -name "*.mo" \
                  -not -name "*.so" \
                  -not -name "*.dylib" \
                  -not -name "*.dll" \
                  -not -name "*.exe" \
                  -not -name "*.o" \
                  -not -name "*.a" \
                  -not -name "*.lib" \
                  -not -name "*.lock" \
                  -exec wc -l {} + 2>/dev/null | tail -1 | awk '{print $1}' || echo "0")
                total=$((total + lines))
                echo "  Found $lines lines"
                rm -rf "/tmp/$repo"
              fi
              count=$((count + 1))
            done
            
            # Next page
            page=$((page + 1))
          done
          
          echo "Total: $total lines in $count repos"
          
          # Format
          if [ $total -ge 1000000 ]; then
            formatted="$((total/1000000))M+"
          elif [ $total -ge 1000 ]; then
            formatted="$((total/1000))K+"
          else
            formatted="${total}+"
          fi
          
          # Update stats
          echo "{\"lines_of_code\": $total, \"repositories\": $count, \"last_updated\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\", \"formatted\": \"$formatted\"}" > stats-simple.json
          
          # Commit
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add stats-simple.json
          git diff --staged --quiet || (git commit -m "Update LOC" && git push)