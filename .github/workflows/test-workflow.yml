name: Update LOC
on: [push, workflow_dispatch]
jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Count all repositories
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Counting all repositories..."
          
          # Install jq
          sudo apt-get update && sudo apt-get install -y jq
          
          # Get username
          USERNAME=$(gh api /user | jq -r '.login')
          echo "Counting for user: $USERNAME"
          
          # Get all non-forked repos
          repos=$(gh api "/users/$USERNAME/repos?type=owner&per_page=100" --paginate | jq -r '.[] | select(.fork == false) | .name')
          
          total_lines=0
          repo_count=0
          
          # Count lines in each repo
          for repo in $repos; do
            echo "Cloning $repo..."
            if git clone -q --depth 1 "https://github.com/$USERNAME/$repo" "/tmp/$repo" 2>/dev/null; then
              # Count code files
              repo_lines=$(find "/tmp/$repo" -type f \( -name "*.js" -o -name "*.ts" -o -name "*.jsx" -o -name "*.tsx" -o -name "*.py" -o -name "*.java" -o -name "*.cpp" -o -name "*.c" -o -name "*.h" -o -name "*.cs" -o -name "*.php" -o -name "*.rb" -o -name "*.go" -o -name "*.rs" -o -name "*.swift" -o -name "*.kt" -o -name "*.scala" -o -name "*.r" -o -name "*.m" -o -name "*.html" -o -name "*.css" -o -name "*.scss" -o -name "*.vue" -o -name "*.svelte" \) 2>/dev/null | xargs wc -l 2>/dev/null | tail -1 | awk '{print $1}' || echo "0")
              total_lines=$((total_lines + repo_lines))
              echo "  $repo: $repo_lines lines"
              rm -rf "/tmp/$repo"
            fi
            repo_count=$((repo_count + 1))
          done
          
          echo "Total: $total_lines lines in $repo_count repositories"
          
          # Format the number
          if [ $total_lines -ge 1000000000 ]; then
            formatted="$((total_lines/1000000000))B+"
          elif [ $total_lines -ge 1000000 ]; then
            formatted="$((total_lines/1000000))M+"
          elif [ $total_lines -ge 1000 ]; then
            formatted="$((total_lines/1000))K+"
          else
            formatted="${total_lines}+"
          fi
          
          cat > stats-simple.json << EOF
{
  "lines_of_code": $total_lines,
  "repositories": $repo_count,
  "last_updated": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
  "formatted": "$formatted"
}
EOF
      - run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add stats-simple.json || true
          git commit -m "Update stats" || true
          git push || true